[
  {
    "objectID": "glossary.html",
    "href": "glossary.html",
    "title": "Glossaire",
    "section": "",
    "text": "A\nArgument : élément d’une fonction, essentiel ou optionnel, qui précise ou modifie la façon dont la fonction est exécutée.\n\n\nB\n\n\nC\nCasse : R différencie les lettres minuscules des lettres majuscules.\nChemin absolu : chemin vers un fichier à partir de la racine (ex : C:/).\nChemin relatif : chemin vers un fichier à partir du répertoire de travail.\nClasse : type de données contenues dans une variable (le plus souvent des caractères ou des valeurs numériques).\nCommande : morceau de code qui exécute une action et qui contient généralement une ou plusieurs fonctions.\nCommentaire : partie d’un script qui ne sera pas exécutée (commence par un #).\nConsole : fenêtre dans RStudio où l’on peut écrire et exécuter du code.\n\n\nD\nData frame : objet à deux dimensions (lignes et colonnes) dont les éléments peuvent être de différents types.\n\n\nE\nEnvironnement : contient votre espace de travail (données importées, objets, fonctions, …)\n\n\nF\nFacteur : vecteur contenant une structure interne définie par des niveaux.\nFonction : code qui exécute une action.\n\n\nG\n\n\nH\n\n\nI\n\n\nJ\n\n\nK\n\n\nL\n\n\nM\nMatrice : objet à deux dimensions dont les éléments sont de même type.\n\n\nN\n\n\nO\nObjet : tout élément manipulé ou créé dans R (on parle d’un langage orienté objet).\n\n\nP\nPackage : ensemble de fonctionnalités supplémentaires qui peuvent être chargées dans R.\n\n\nQ\n\n\nR\nRépertoire de travail : dossier qui contient tout ce qui concerne votre session actuelle.\n\n\nS\nScript : à la façon d’un document texte, permet de rédiger et de sauvegarder du code.\n\n\nT\n\n\nU\n\n\nV\nVecteur : objet à une dimension, dont les éléments sont de même type.\n\n\nW\n\n\nX\n\n\nY\n\n\nZ"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ateliers codons",
    "section": "",
    "text": "R - perfectionnement"
  },
  {
    "objectID": "posts/01-installer-r-et-rstudio/index.html",
    "href": "posts/01-installer-r-et-rstudio/index.html",
    "title": "Installer R et RStudio",
    "section": "",
    "text": "Ce tutoriel est adapté de Getting started with R and RStudio du site Our Coding Club."
  },
  {
    "objectID": "posts/01-installer-r-et-rstudio/index.html#télécharger-r",
    "href": "posts/01-installer-r-et-rstudio/index.html#télécharger-r",
    "title": "Installer R et RStudio",
    "section": "Télécharger R",
    "text": "Télécharger R\nNaviguez jusqu’au site internet du CRAN (The Comprehensive R Archive Network) et choisissez Download R for Windows.\n\n\n\n\n\n\nCliquez sur base puis sur Download R-… for Windows.\n \n\nChoisissez l’emplacement de sauvegarde puis téléchargez le fichier."
  },
  {
    "objectID": "posts/01-installer-r-et-rstudio/index.html#installer-r",
    "href": "posts/01-installer-r-et-rstudio/index.html#installer-r",
    "title": "Installer R et RStudio",
    "section": "Installer R",
    "text": "Installer R\nNaviguez jusqu’à l’emplacement de sauvegarde (Téléchargements par exemple) et double-cliquez sur le fichier R-…-win.exe\n\n\n\n\n\n\nChoisissez la langue pour l’installation puis cliquez sur OK\n\n\n\n\n\n\nParcourez les Informations puis cliquez sur Suivant.\n\n\n\n\n\n\nChoisissez le dossier dans lequel sera installé R (Program Files par exemple).\n\n\n\n\n\n\nDans les Composants à installer, laissez les valeurs par défaut puis cliquez sur Suivant.\n\n\n\n\n\n\nDans les Options de démarrage, laissez les valeurs par défauts puis cliquez sur Suivant.\n\n\n\n\n\n\nDans les Tâches supplémentaires, vous pouvez choisir de créer une icône sur le Bureau et/ou dans la barre de lancement rapide.\n\n\n\n\n\n\nNote\n\n\n\nNous utilisons rarement R de manière isolée, vous pouvez donc laisser les valeurs par défaut.\n\n\n\n\n\n\n\n\nUne fois R installé, cliquez sur Terminer.\n\n\n\n\n\n\nNote\n\n\n\nLa plupart des utilisateurs interagissent avec R à l’aide d’une interface graphique, dont la plus connue est RStudio."
  },
  {
    "objectID": "posts/01-installer-r-et-rstudio/index.html#télécharger-rstudio",
    "href": "posts/01-installer-r-et-rstudio/index.html#télécharger-rstudio",
    "title": "Installer R et RStudio",
    "section": "Télécharger RStudio",
    "text": "Télécharger RStudio\nNaviguez jusqu’au site internet de RStudio et cliquez sur Products puis sur RStudio.\n\n\n\n\n\n\nChoisissez RStudio Desktop\n\n\n\n\n\n\nCliquez sur Download RStudio Desktop\n\n\n\n\n\n\nChoisissez RStudio Desktop FREE puis cliquez sur Download.\n\n\n\n\n\n\nCliquez sur Download RStudio for Windows et choisissez l’emplacement de sauvegarde."
  },
  {
    "objectID": "posts/01-installer-r-et-rstudio/index.html#installer-rstudio",
    "href": "posts/01-installer-r-et-rstudio/index.html#installer-rstudio",
    "title": "Installer R et RStudio",
    "section": "Installer RStudio",
    "text": "Installer RStudio\nNaviguez jusqu’à l’emplacement de sauvegarde (Téléchargements par exemple) et double-cliquez sur le fichier RStudio-…exe\n\n\n\n\n\n\nDans la fenêtre Installation de RStudio qui s’ouvre, cliquez sur Suivant.\n\n\n\n\n\n\nChoisissez le dossier dans lequel sera installé RStudio (Program Files par exemple) et cliquez sur Suivant.\n\n\n\n\n\n\nDans le menu Choisissez un dossier dans le menu Démarrer, laissez la valeur par défaut (RStudio) et cliquez sur Installer.\n\n\n\n\n\n\nUne fois RStudio installé, cliquez sur Fermer."
  },
  {
    "objectID": "posts/02-premiers-pas-avec-r/index.html",
    "href": "posts/02-premiers-pas-avec-r/index.html",
    "title": "Premiers pas avec R",
    "section": "",
    "text": "Ce tutoriel est adapté de Getting started with R and RStudio du site Our Coding Club."
  },
  {
    "objectID": "posts/02-premiers-pas-avec-r/index.html#r_def",
    "href": "posts/02-premiers-pas-avec-r/index.html#r_def",
    "title": "Premiers pas avec R",
    "section": "Qu’est-ce que R ?",
    "text": "Qu’est-ce que R ?\n\nR est un langage de programmation statistique qui a rapidement gagné en popularité dans de nombreux domaines scientifiques.\nIl a été développé par Ross Ihaka et Robert Gentleman, du Département de Statistiques de l’Université d’Auckland, comme implémentation libre du langage de programmation S.\n\n\n\n\n\n\n\nQuelques dates\n\n\n\n\n\n\n1991\nCréation du langage R\n\n\n1993\nR est dévoilé au public\n\n\n1996\nArticle dans le Journal of Computational and Graphical Statistics\n\n\n\n\n\n\nR désigne également le logiciel qui utilise ce langage pour des calculs statistiques (et tout un tas d’autres applications !).\nIl dispose d’une communauté en ligne très active ainsi que d’extensions pour presque tous les domaines et applications possibles et imaginables.\n\nContrairement à d’autres logiciels de statistiques comme Minitab ou SPSS, R peut être exécuté entièrement en ligne de commande et ne nécessite pas d’interface graphique, ce qui lui confère une grande flexibilité.\n\n\n\n\n\n\n\nQuelques avantages de R\n\n\n\n\nC’est un outil libre et open source (tout le monde peut utiliser le code et voir comment il fonctionne)\n\nC’est un langage de programmation plutôt qu’une interface graphique, ce qui permet à l’utilisateur de sauvegarder facilement des scripts sous forme de texte pour les ré-utiliser ou les partager\n\nBeaucoup de personnes l’utilisent dans beaucoup de domaines différents - il est rare d’être confronté à un problème qui n’a jamais été résolu !"
  },
  {
    "objectID": "posts/02-premiers-pas-avec-r/index.html#naviguer_rstudio",
    "href": "posts/02-premiers-pas-avec-r/index.html#naviguer_rstudio",
    "title": "Premiers pas avec R",
    "section": "Naviguer dans RStudio",
    "text": "Naviguer dans RStudio\n\nEn ouvrant RStudio, vous verrez une fenêtre comme celle ci-dessous, qui se divise en trois panneaux :\n\n\n\nLa console\nVous pouvez y taper du code et l’exécuter en appuyant sur Entrée.\nLors du lancement d’une session RStudio, elle affiche également des informations comme la version de R présente sur votre ordinateur et des indications sur la manière d’obtenir de l’aide.\n\n\n\n\n\n\nL’invite de commande\n\n\n\nDans la console, une ligne commence par > : c’est ce qu’on appelle l’invite de commande. Cela indique que R est prêt à recevoir vos instructions !\nTapez 2+2 puis appuyez sur Entrée : la console affiche le résultat.\n\n\n\n\nL’environnement\nL’environnement affiche le contenu de votre espace de travail : données importées, objets créés, fonctions définies, …\n\n\n\n\n\n\nUn langage orienté objet\n\n\n\nR est un langage orienté objet, ce qui veut dire que tout ce que vous manipulez dans R est stocké dans un objet.\n\n\nD’autres onglets vous permettent d’accéder à l’historique des commandes ou encore à des tutoriels (pour les versions les plus récentes de RStudio).\n\n\nLe navigateur\nCe navigateur vous permet de navigeur dans vos dossiers, de copier, renommer ou supprimer des fichiers, à la manière d’un explorateur classique.\nLes autres onglets permettent de visualiser les graphiques ou encore d’afficher l’aide.\n\n\nLe script\n\n\n\n\n\n\nImportant\n\n\n\nLe code tapé et exécuté dans la console ne sera plus disponible quand vous quitterez votre session RStudio. A la manière d’un document Word, un script vous permet de sauvegarder votre code afin d’y accéder ultérieurement ou de le partager.\n\n\nPour ouvrir un nouveau script, cliquez sur le “plus” dans le coin supérieur gauche de la fenêtre RStudio puis sur R Script.\n\n\n\n\n\n\n\nRaccourcis clavier : nouveau script\n\n\n\nPour ouvrir un nouveau script, utilisez la combinaison Ctrl + Shift + N\n\n\nUn nouveau panneau s’affiche :"
  },
  {
    "objectID": "posts/02-premiers-pas-avec-r/index.html#créer-un-projet",
    "href": "posts/02-premiers-pas-avec-r/index.html#créer-un-projet",
    "title": "Premiers pas avec R",
    "section": "Créer un projet",
    "text": "Créer un projet\nPour éviter de perdre du temps à chercher des fichiers dont on a oublié le nom et l’emplacement, il est utile d’organiser son travail à l’aide de projets.\nPour créer un projet, cliquez sur File puis New project… :\n\nChoisissez New Directory puis New Project\n\n\nDans la fenêtre Create New Project, attribuez un nom et un emplacement au projet, puis cliquez sur Create project\n\nQuand vous voudrez travailler à nouveau sur ces données, il vous suffira de double-cliquer sur le fichier .Rproj pour ouvrir le projet et accéder à tout ce qu’il contient.\n\n\n\n\n\n\n\nBonne pratiques : nommer ses fichiers et dossiers\n\n\n\nPour vous simplifier la vie, voici quelques recommandations :\n\nprivilégiez les noms courts et explicites (à éviter : fichier_2e_version_a_verifier.txt)\nne mettez ni espace ni caractères spéciaux (accents, symboles, …)\n\npour les dates, privilégiez le format AAAAMMJJ (année, mois, jour)\nmettez l’élément le plus important en premier (par exemple : projet_date_contenu)\n\noptez pour l’une de ces deux conventions d’écritre : camel case (MonProjet) ou snake case (mon_projet)\n\nUne fois que vous avez trouvé une façon de procéder, utlisez-la pour l’ensemble de vos fichiers afin de rester cohérent !"
  },
  {
    "objectID": "posts/02-premiers-pas-avec-r/index.html#créer-une-arborescence",
    "href": "posts/02-premiers-pas-avec-r/index.html#créer-une-arborescence",
    "title": "Premiers pas avec R",
    "section": "Créer une arborescence",
    "text": "Créer une arborescence\nIl est toujours préférable de passer un peu de temps à bien organiser un projet lors de sa création, plutôt que de passer beaucoup de temps par la suite à déplacer des fichiers, les renommer, les rechercher, …\nPour créer un nouveau dossier dans votre projet, cliquez sur New Folder dans l’onglet Files du navigateur : \nL’organisation proposée ci-dessous est utilisable dans une très grande majorité de cas :\n\nraw : contient les données brutes qui seront utilisées mais laisées en l’état.\n\ndata : contient les données issues de la manipulation des données brutes (sous-ensembles, données corrigées, renommées, nouvelles variables calculées, …)\n\nscripts : contient le code utilisé pour manipuler les données, générer les figures, rédiger les rapports, …\nresultats : contient les fichiers de résultats issus de l’analyse.\nfigures : contient les graphiques et figures générées lors de l’analyse.\n\ndocs : contient les rapports rédigés au cours de l’analyse, les présentations de résultats, des articles en lien avec l’analyse, les documents concernant les outils utlisés, …"
  },
  {
    "objectID": "posts/02-premiers-pas-avec-r/index.html#importer-les-données",
    "href": "posts/02-premiers-pas-avec-r/index.html#importer-les-données",
    "title": "Premiers pas avec R",
    "section": "Importer les données",
    "text": "Importer les données\nSi ce n’est pas encore fait, ouvrez un nouveau script.\n\n\n\n\n\n\nBonne pratiques : commenter ses scripts\n\n\n\nPrenez dès maintenant l’habitude de commenter vos scripts. Il s’agit de rédiger des commentaires qui expliquent ce que fait votre code, pour le rendre plus compréhensible par vos collègues - et par vous-même quand vous reviendrez sur un script après un certain temps ! Pour ajouter un commentaire, utiliser un # au début d’une ligne puis rédigez votre commentaire. Dans R, un code placé après un # n’est pas exécuté :\n\n# Ceci est un commentaire qui ne sera pas exécuté\n# La ligne suivante sera exécutée\n2 + 2\n\n\n\nPour commencer, ajoutons des informations en haut de notre script :\n\n# Ateliers codons\n# 01 - Premiers pas avec R\n# 2022-11-07\n\n\n\n\n\n\n\nRaccourcis clavier : commentaires\n\n\n\nPour commenter ou dé-commenter une ligne de code, utilisez la combinaison Ctrl + Shift + C.\n\n\nLe jeu de données que nous allons utiliser contient des mesures pour trois espèces de pingouins vivant sur l’archipel Palmer en Antarctique.\nPour importer ces données, nous allons faire appel à la fonction read.csv() qui, comme son nom l’indique, permet de lire un fichier au format .csv. Une fonction permet d’exécuter une action comme calculer une somme, importer ou exporter un fichier.\nToutes les fonctions s’utilisent de la même façon :\n\nfonction(x, arguments)\n\n\nun appel à la fonction en tapant son nom\n\nEntre parenthèses :\n\nles données sur lesquelles appliquer la fonction (x)\n\nles arguments, obligatoires ou optionnels, qui vont modifier la manière dont la fonction sera exécutée.\n\nVoyons ce que fait la fonction read.csv(). Nous allons préciser deux arguments :\n\nle chemin vers le fichier à importer, entre guillemets :\"raw/pingouins.csv\"\n\nl’argument check.names = FALSE pour garder les noms de colonnes tels quels.\n\nTapez le code suivant dans la console et appuyez sur Entrée :\n\nread.csv(file = \"raw/pingouins.csv\", check.names = FALSE)\n\n\n\n\n\n\n\n\n\n\n\nBonne pratiques : auto-complétion\n\n\n\nR vous aide à compléter votre code : tapez re puis Tab, et vous verrez s’afficher une liste de fonctions ou d’objets commençant par ces deux lettres. Vous pouvez naviguer à l’aide des flèches haut et bas et valider votre choix en appuyant à nouveau sur Tab. Cette fonctionnalité de R est particulièrement utile lorsque vous manipulez des fichiers ou objets ayant des noms complexes.\n\n\nLe fichier a effectivement été importé dans R, mais il n’est pour l’instant pas stocké dans notre environnement. Nous allons pour cela stocker le contenu du fichier dans un objet à l’aide de la flèche d’assignation <-. Placez-vous dans votre script et tapez le code suivant :\n\npingouins <- read.csv(file = \"raw/pingouins.csv\", check.names = FALSE)\n\n\n\n\n\n\n\nRaccourcis clavier : flèche d’assignation\n\n\n\nPour insérer une flèche d’assignation, utilisez la combinaison Alt + “-” (tiret du 6).\n\n\nExécutez cette fonction en plaçant le curseur sur la ligne et en cliquant sur Run :\n\n\n\n\n\n\n\nRaccourcis clavier : exécuter du code\n\n\n\nPour exécuter une ou plusieurs lignes de code, sélectionnez les lignes et utilisez la combinaison Ctrl + Entrée\n\n\nNotre environnement contient maintenant un objet pingouins, et vous pouvez voir l’indication 344 obs. of 9 variables : le jeu de données contient 344 observations (lignes) et 9 variables (colonnes).\n\nEn cliquant sur la flèche bleue à gauche du nom de l’objet, vous aurez accès à plus d’informations :\n\n\nNoms des variables : le tableau contient 9 variables dont les noms sont précédés du signe $.\n\n\n\n\n\n\n\nL’opérateur $\n\n\n\nCet opérateur permet de sélectionner la colonne d’un tableau. Dans la console, tapez pingouins$ et appuyez sur Tab.\n Vous pouvez choisir la variable qui vous intéresse à l’aide des flèches haut et bas (Espece par exemple) puis appuyer à nouveau sur Tab pour valider. Vous verrez alors s’afficher les 344 observations de cette variable. \n\n\n\nTypes des variables : indique s’il s’agit d’une variable de type caractère (chr), d’une variable contenant des nombres entiers (int) ou des nombres décimaux (num). Une variable peut également être de type logique (log) (TRUE ou FALSE).\nPremiers éléments de chaque variable.\n\nVous pouvez afficher le tableau en cliquant sur l’icône à droite du nom de l’objet dans l’environnement :\n\nCela ouvre un nouvel onglet à côté de de votre script :\n\nAvant d’aller plus loin, sauvegardez votre script en cliquant sur l’icône disquette en haut de votre script :\n\nChoisissez le dossier où sera sauvegardé votre script - scripts dans notre cas, et nommez votre script puis cliquez sur Save :\n\n\n\n\n\n\n\nRaccourcis clavier : sauvegarder un script\n\n\n\nPour sauvegarder un script, uilisez la combinaison Ctrl + S"
  },
  {
    "objectID": "posts/02-premiers-pas-avec-r/index.html#explorer-les-données",
    "href": "posts/02-premiers-pas-avec-r/index.html#explorer-les-données",
    "title": "Premiers pas avec R",
    "section": "Explorer les données",
    "text": "Explorer les données\nUne des premières choses à faire est de vous assurer que vos données ont été correctement importées. Les outils proposés par R vous permettent d’effectuer des analyses, mais c’est à vous de vous assurer que vos données sont au bon format.\nPour cette étape d’exploration des données, vous pouvez taper le code directement dans la console.\nPlusieurs fonctions vous permettent d’explorer rapidement vos données :\n\n# Afficher les premieres lignes du tableau\nhead(pingouins)\n\n# Afficher les dernieres lignes du tableau\ntail(pingouins)\n\n# Afficher la structure du tableau\nstr(pingouins)\n\nVous remarquerez que la fonction str(pingouins) affiche des informations très proches de celles obtenues en cliquant sur la flèche bleue à gauche de l’objet pingouins dans l’environnement.\n\n\n\n\n\n\nAfficher l’aide d’une fonction\n\n\n\nVous pouvez afficher l’aide d’une fonction de deux manières :\n- taper help(fonction) (pensez à l’auto-complétion !) - taper ?fonction\nEssayez en tapant dans la console ?he puis appuyez sur Tab : R vous propose une liste de fonctions commençant par he. Utilisez les flèches haut et bas pour choisir la fonction head. Une petite fenêtre vous donne un aperçu du contenu de l’aide pour la fonction (utile quand vous hésitez entre plusieurs fonctions). Une fois la fonction sélectionnée, appuyez sur la touche F1 pour afficher l’aide complète dans l’onglet Help.\nL’aide d’une fonction contient plusieurs paragraphes :\n\nune description de la fonction\n\ncomment utiliser la fonction\n\nles arguments de la fonction\n\nles détails de la fonction (quel type de données en entrée, des précisions sur les arguments, …)\n\nce que la fonction retourne en sortie\n\ndes notes additionnelles\n\nles auteurs qui ont contribué à l’écriture du code de la fonction\n\ndes exemples sur l’utilisation de la fonction (avec possibilité d’exécuter ces exemples)\n\nDans le cas de head(), vous pouvez voir que par défaut, la fonction retournera les 6 premières lignes (n = 6L, L indiquant qu’il s’agit d’un nombre entier). Pour afficher uniquement les deux premières lignes du tableau pingouins, il vous faudrait modifier cet argument : head(pingouins, n = 2L)\n\n\nVous pouvez explorer une variable d’intérêt :\n\n# Afficher les premiers elements d'une variable\nhead(pingouins$`Masse corporelle (g)`)\n\n# Afficher les derniers elements d'une variable\ntail(pingouins$`Masse corporelle (g)`)\n\n# Afficher le type, le nombre d'elements et les premiers elements d'une variable\nstr(pingouins$`Masse corporelle (g)`)\n\n# Afficher le type de variable\ntypeof(pingouins$`Masse corporelle (g)`)\n\n\n\n\n\n\n\nLes données manquantes\n\n\n\nSi vous tapez head(pingouins$Masse corporelle (g)) dans la console, vous verrez un élément NA. Il s’agit d’une donnée manquante (Not Available) : aucune mesure n’a été relevée chez cet individu pour cette variable.\nCette valeur NA est à différencier de la valeur NaN (Not a Number) également rencontrée dans R. Il s’agit alors du résultat d’une opération arithmétique invalide, telle que 0/0.\n\n\nLa fonction dim(pingouins) permet d’afficher les dimensions du tableau (m lignes et n colonnes).\n\n\n\n\n\n\nSélectionner des données\n\n\n\nDans R, la sélection de données, que ce soit une cellule, une ligne ou une colonne d’un tableau, ou encore un élément dans une chaîne, s’effectue à l’aide des crochets [].\n\nDans le cas d’un objet à deux dimensions, la sélection s’effectue en précisant deux paramètres séparés par une virgule : la ou les ligne(s) et la ou les colonne(s). Pour sélectionner l’ensemble d’une des deux dimensions, on utilise un espace vide d’un côté ou de l’autre de la virgule. Pour sélectionner plusieurs lignes ou colonnes, vous pouvez utiliser soit l’opérateur : si les lignes ou les colonnes se suivent, soit l’opérateur de concaténation c() (vous pouvez combiner les deux).\nPour un objet à une seule dimension, un seul paramètre est nécessaire (de la même façon, vous pouvez combiner les éléments avec les opérateurs : et c()) :\n\n\n# Selectionner la 3e ligne et la 5e colonne : \npingouins[3, 5]\n\n# Selectionner la 3e ligne : \npingouins[3, ]\n\n# Selectionner la 5e colonne : \npingouins[, 5]\n\n# Selectionner les lignes 40 à 45 : \npingouins[40:45, ]\n\n# Selectionner les colonnes 2 et 4 : \npingouins[, c(2, 4)]\n\n# Selectionner les lignes 50 et 100 à 105 : \npingouins[c(50, 100:105), ]\n  \n# Selectionner le 45e element de la variable Ile\npingouins$Ile[45]"
  },
  {
    "objectID": "posts/02-premiers-pas-avec-r/index.html#corriger-des-données",
    "href": "posts/02-premiers-pas-avec-r/index.html#corriger-des-données",
    "title": "Premiers pas avec R",
    "section": "Corriger des données",
    "text": "Corriger des données\nLa fonction summary(pingouins) est particulièrement intéressante pour avoir une vue d’ensemble de vos données.\n\nLes informations affichées à l’aide de cette fonction dépendent du type de variable :\n\nnombre d’éléments pour les variables de type caractère\n\nstatistiques pour les variables de type numérique\n\nIl peut arriver que certaines variables soient mal catégorisées. Les deux cas de figure les plus répandus sont les suivants :\n\nles catégories d’une variable sont représentées par des valeurs numériques et R considère cette variable comme étant numérique (par exemple Echantillon Numero)\n\nles catégories d’une variable ne sont pas prises en compte et R considère cette variable comme étant simplement une chaîne de caractères (par exemple Espece et Ile) ou de valeurs numériques.\n\n\n\n\n\n\n\nVecteurs et facteurs\n\n\n\nOn désigne par vecteur un objet uni-dimensionnel contenant des éléments d’un seul type (caractères, valeurs numériques ou logiques). Un tableau est constitué de vecteurs situés dans les colonnes.\nUn facteur est un vecteur dont les éléments peuvent être regroupés en catégories (on parle de niveaux).\n\n\nSi vous ne connaissez pas dans le détail votre jeu de données, vous pouvez avoir une idée de sa structure sous-jacente en comptant le nombre d’éléments uniques des différentes variables à l’aide des fonctions unique() et length()\n\n# Extraire les elements uniques d'une variable\nunique(pingouins$Espece)\n\n# Compter le nombre d'elements uniques d'une variable\nlength(unique(pingouins$Espece))\n\nLa fonction unique() affiche les éléments uniques d’une variable par ordre d’apparition.\nLa fonction as.factor() permet de transformer un vecteur en facteur. Par défaut, les niveaux sont triés par ordre alphabétique. Si vous le souhaitez, vous pouvez préciser manuellement l’ordre souhaité pour ces niveaux à l’aide de l’argument levels.\n\n# Transformer un vecteur en facteur\npingouins$`Echantillon Numero` <- as.factor(pingouins$`Echantillon Numero`)\npingouins$Espece <- as.factor(pingouins$Espece)\npingouins$Ile <- as.factor(pingouins$Ile)\n\nVérifiez que les corrections apportées aient bien été appliquées au jeu de données :\n\n\n\n\n\n\n\nBonne pratiques : structurer son script\n\n\n\nVotre script commence à être bien fourni. Vous pouvez le diviser en différentes parties pour simplifier la lecture. Pour cela, ajoutez des titres sous forme de commentaires et accolez des tirets (au moins quatre) pour signaler à R qu’il s’agit de divisions dans votre script.\n\nEn cliquant sur l’icône Menu à droite vous aurez accès à une table des matières dans laquelle vous pourrez naviguer en cliquant sur la partie qui vous intéresse."
  },
  {
    "objectID": "posts/03-introduction-tidyverse/index.html",
    "href": "posts/03-introduction-tidyverse/index.html",
    "title": "Introduction au Tidyverse",
    "section": "",
    "text": "Ce tutoriel est adapté de Basic data manipulation et Efficient data manipulation du site Our Coding Club."
  },
  {
    "objectID": "posts/04-rmarkdown/index.html",
    "href": "posts/04-rmarkdown/index.html",
    "title": "Introduction à RMarkdown",
    "section": "",
    "text": "Ce tutoriel est adapté de Basic data manipulation et Efficient data manipulation du site Our Coding Club."
  },
  {
    "objectID": "posts/05-git/index.html",
    "href": "posts/05-git/index.html",
    "title": "Introduction à git",
    "section": "",
    "text": "Ce tutoriel est adapté de Basic data manipulation et Efficient data manipulation du site Our Coding Club."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]